buildscript {
    repositories {
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
}

apply plugin: 'org.spongepowered.mixin'

group = project.maven_group
version = project.mod_version

java {
    archivesBaseName = project.archives_base_name
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    mappings channel: 'official', version: project.minecraft_version

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'canary'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"

            mods {
                canary {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'canary'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"

            mods {
                canary {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "canary.refmap.json"

    config "canary.mixins.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.forge_version}"

    implementation fg.deobf("curse.maven:ferritecore-429235:4117906") //Ferritecore
    implementation fg.deobf("curse.maven:fastload-630620:4074712")//Fastload
    implementation fg.deobf("curse.maven:smooth-boot-reloaded-633412:4049125")//Smooth Boot (Reloaded)
    implementation fg.deobf("curse.maven:lazy-dfu-forge-460819:3831644")//Lazy DFU
    implementation fg.deobf("curse.maven:starlight-forge-526854:3836016")//Starlight (Forge)
    implementation fg.deobf("curse.maven:quark-243121:4140000")//Quark
    implementation fg.deobf("curse.maven:autoreglib-250363:4100299")//AutoRegLib
    implementation fg.deobf("curse.maven:crackers-wither-storm-mod-621405:4030212")//Cracker's Wither Storm
    implementation fg.deobf("curse.maven:wooden-hopper-440985:3875585")//Wooden Hopper
    implementation fg.deobf("curse.maven:create-328085:4174330")//Create
    implementation fg.deobf("curse.maven:jei-238222:4175833")//Just Enough Items (JEI)
    implementation fg.deobf("curse.maven:small-ships-450659:3926824") //Small Ships

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Vendor"    : project.mod_author,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : project.mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}