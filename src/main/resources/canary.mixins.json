{
  "package": "com.abdelaziz.canary.mixin",
  "required": true,
  "compatibilityLevel": "JAVA_17",
  "plugin": "com.abdelaziz.canary.mixin.CanaryMixinPlugin",
  "injectors": {
    "defaultRequire": 1
  },
  "minVersion": "0.8.2",
  "refmap": "canary.refmap.json",
  "mixins": [
    "ai.pathing.BlockStateBaseMixin",
    "ai.pathing.FlyNodeEvaluatorMixin",
    "ai.pathing.PathNavigationRegionMixin",
    "ai.pathing.WalkNodeEvaluatorMixin",
    "ai.poi.fast_portals.PortalForcerMixin",
    "ai.poi.tasks.LocateHidingPlaceMixin",
    "ai.poi.tasks.RaiderMoveThroughVillageGoalMixin",
    "ai.raid.RaiderMixin",
    "ai.raid.RaidMixin",
    "ai.sensor.secondary_poi.SecondaryPoiSensorMixin",
    "ai.task.goat_jump.LongJumpToRandomPosMixin",
    "ai.task.launch.BrainMixin",
    "ai.task.memory_change_counting.BehaviorMixin",
    "ai.task.memory_change_counting.BrainMixin",
    "ai.task.replace_streams.GateBehaviorMixin",
    "ai.task.replace_streams.ShufflingListMixin",
    "alloc.blockstate.StateHolderMixin",
    "alloc.chunk_random.LevelMixin",
    "alloc.chunk_random.ServerLevelMixin",
    "alloc.chunk_ticking.ServerChunkCacheMixin",
    "alloc.composter.ComposterMixin$ComposterBlockEmptyContainerMixin",
    "alloc.composter.ComposterMixin$ComposterBlockInputContainerMixin",
    "alloc.composter.ComposterMixin$ComposterBlockOutputContainerMixin",
    "alloc.deep_passengers.EntityMixin",
    "alloc.empty_chunk.EmptyLevelChunkMixin",
    "alloc.empty_iterator.ClassInstanceMultiMapMixin",
    "alloc.empty_list.WorldGenRegionMixin",
    "alloc.entity_tracker.TrackedEntityMixin",
    "alloc.enum_values.living_entity.LivingEntityMixin",
    "alloc.enum_values.piston_block.PistonBaseBlockMixin",
    "alloc.enum_values.piston_structure.PistonStructureResolverMixin",
    "alloc.enum_values.redstone_wire.RedStoneWireBlockMixin",
    "alloc.explosion_behavior.EntityBasedExplosionDamageCalculatorMixin",
    "block.flatten_states.BlockStateBaseMixin",
    "block.flatten_states.FluidStateMixin",
    "block.moving_block_shapes.PistonMovingBlockEntityMixin",
    "block.moving_block_shapes.VoxelShapeMixin",
    "block.redstone_wire.RedStoneWireBlockMixin",
    "cached_hashcode.BlockStatePairKeyMixin",
    "calc.if_else.block_entity.can_place_item.brewing_stand.BrewingStandBlockEntityMixin",
    "calc.if_else.block_entity.composter.ComposterBlockMixin",
    "calc.if_else.block_entity.get_capability.brewing_stand.BrewingStandBlockEntityMixin",
    "calc.if_else.block_entity.get_capability.furnace.AbstractFurnaceBlockEntityMixin",
    "calc.if_else.block_entity.get_slots_for_face.brewing_stand.BrewingStandBlockEntityMixin",
    "calc.if_else.block_entity.get_slots_for_face.furnace.AbstractFurnaceBlockEntityMixin",
    "calc.if_else.dripstone_shape.PointedDripstoneBlockMixin",
    "calc.if_else.entity.handle_entity_event.goat.GoatMixin",
    "calc.if_else.entity.handle_entity_event.horse.AbstractHorseMixin",
    "calc.if_else.entity.handle_entity_event.iron_golem.IronGolemMixin",
    "calc.if_else.entity.handle_entity_event.ocelot.OcelotMixin",
    "calc.if_else.entity.handle_entity_event.player.PlayerMixin",
    "calc.if_else.entity.handle_entity_event.tamable_animal.TamableAnimalMixin",
    "calc.if_else.entity.handle_entity_event.villager.VillagerMixin",
    "calc.if_else.entity.handle_entity_event.wolf.WolfMixin",
    "calc.if_else.player_slot.PlayerMixin",
    "calc.if_else.raid_odds.RaidMixin",
    "chunk.entity_class_groups.ClassInstanceMultiMapMixin",
    "chunk.entity_class_groups.EntitySectionAccessor",
    "chunk.entity_class_groups.PersistentEntitySectionManagerAccessor",
    "chunk.entity_class_groups.ServerLevelAccessor",
    "chunk.entity_class_groups.TransientEntitySectionManagerAccessor",
    "chunk.no_locking.PalettedContainerMixin",
    "chunk.no_validation.SimpleBitStorageMixin",
    "chunk.no_validation.ZeroBitStorageMixin",
    "chunk.palette.PalettedContainerMixin",
    "chunk.serialization.PalettedContainerMixin",
    "chunk.serialization.SimpleBitStorageMixin",
    "collections.attributes.AttributeMapMixin",
    "collections.brain.BrainMixin",
    "collections.entity_by_type.ClassInstanceMultiMapMixin",
    "collections.entity_filtering.ClassInstanceMultiMapMixin",
    "collections.entity_ticking.EntityTickListMixin",
    "collections.fluid_submersion.EntityMixin",
    "collections.gamerules.GameRulesMixin",
    "collections.goals.GoalSelectorMixin",
    "collections.mob_spawning.MobSpawnSettingsMixin",
    "collections.mob_spawning.WeightedRandomListMixin",
    "entity.collisions.intersection.LevelMixin",
    "entity.collisions.movement.EntityMixin",
    "entity.collisions.suffocation.EntityMixin",
    "entity.collisions.unpushable_cramming.AbstractMinecartMixin",
    "entity.collisions.unpushable_cramming.BoatMixin",
    "entity.collisions.unpushable_cramming.EntityMixin",
    "entity.collisions.unpushable_cramming.EntitySectionMixin",
    "entity.collisions.unpushable_cramming.EntitySelectorMixin",
    "entity.collisions.unpushable_cramming.LivingEntityMixin",
    "entity.data_tracker.no_locks.SynchedEntityDataMixin",
    "entity.data_tracker.use_arrays.SynchedEntityDataMixin",
    "entity.fast_elytra_check.LivingEntityMixin",
    "entity.fast_hand_swing.LivingEntityMixin",
    "entity.fast_powder_snow_check.LivingEntityMixin",
    "entity.fast_retrieval.EntitySectionStorageMixin",
    "entity.hopper_minecart.HopperBlockEntityMixin",
    "entity.inactive_navigations.DrownedGoToBeachGoalMixin",
    "entity.inactive_navigations.DrownedMixin",
    "entity.inactive_navigations.EntityCallbacksMixin",
    "entity.inactive_navigations.MobMixin",
    "entity.inactive_navigations.PathNavigationMixin",
    "entity.inactive_navigations.ServerLevelMixin",
    "entity.replace_entitytype_predicates.AbstractMinecartMixin",
    "entity.replace_entitytype_predicates.ArmorStandMixin",
    "entity.replace_entitytype_predicates.GolemRandomStrollInVillageGoalMixin",
    "entity.replace_entitytype_predicates.HangingEntityMixin",
    "entity.replace_entitytype_predicates.ItemFrameMixin",
    "entity.replace_entitytype_predicates.LlamaFollowCaravanGoalMixin",
    "entity.skip_equipment_change_check.ArmorStandMixin",
    "entity.skip_equipment_change_check.LivingEntityMixin",
    "entity.skip_equipment_change_check.MobMixin",
    "entity.skip_fire_check.EntityMixin",
    "gen.cached_generator_settings.NoiseBasedChunkGeneratorMixin",
    "gen.chunk_region.WorldGenRegionMixin",
    "item.ItemStackMixin",
    "math.fast_blockpos.BlockPosMixin",
    "math.fast_blockpos.DirectionMixin",
    "math.fast_util.AABBMixin",
    "math.fast_util.AxisCycleDirectionMixin$BackwardMixin",
    "math.fast_util.AxisCycleDirectionMixin$ForwardMixin",
    "math.fast_util.DirectionMixin",
    "math.sine_lut.MthMixin",
    "profiler.ServerLevelMixin",
    "shapes.blockstate_cache.BlockMixin",
    "shapes.lazy_shape_context.EntityCollisionContextMixin",
    "shapes.optimized_matching.ShapesMixin",
    "shapes.precompute_shape_arrays.CubePointRangeMixin",
    "shapes.precompute_shape_arrays.CubeVoxelShapeMixin",
    "shapes.shape_merging.ShapesMixin",
    "shapes.specialized_shapes.ShapesMixin",
    "shapes.specialized_shapes.VoxelShapeMixin",
    "util.block_tracking.BlockStateBaseMixin",
    "util.block_tracking.LevelChunkSectionMixin",
    "util.world_border_listener.WorldBorderMixin",
    "world.block_entity_ticking.support_cache.BlockEntityMixin",
    "world.block_entity_ticking.support_cache.BoundTickingBlockEntityMixin",
    "world.block_entity_ticking.support_cache.LevelChunkMixin",
    "world.block_entity_ticking.world_border.BoundTickingBlockEntityMixin",
    "world.chunk_access.ChunkHolderMixin",
    "world.chunk_access.LevelMixin",
    "world.chunk_access.ServerChunkCacheMixin",
    "world.chunk_tickets.SortedArraySetMixin",
    "world.combined_heightmap_update.HeightmapAccessor",
    "world.combined_heightmap_update.LevelChunkMixin",
    "world.explosions.ExplosionMixin",
    "world.inline_block_access.LevelChunkMixin",
    "world.inline_block_access.LevelMixin",
    "world.inline_height.LevelChunkMixin",
    "world.inline_height.LevelMixin",
    "world.player_chunk_tick.ChunkMapMixin",
    "world.tick_scheduler.LevelChunkTicksMixin"
  ],
  "client": [
    "chunk.entity_class_groups.ClientLevelMixin",
    "chunk.entity_class_groups.TransientEntitySectionManagerAccessor"
  ]
}